1.
let arr=[8,3,4,6,1]
function selectionSort(arr){
    for(let i=0;i<arr.length-1;i++){
        let min=i
        for(let j=i+1;j<arr.length;j++){
            if(arr[j]<arr[min]) min=j;
        }
        let temp=arr[i]
        arr[i]=arr[min]
        arr[min]=temp
    }
    return arr
}
console.log(selectionSort(arr));

2.
function bubbleSort(arr){
    for(let i=arr.length-1;i>0;i--){
        let max=i
        for(let j=0;j<i;j++){
            if(arr[j]>arr[max]) max=j;
        }
        let temp=arr[i]
        arr[i]=arr[max]
        arr[max]=temp
    }
    return arr
}
// console.log(bubbleSort(arr));

3.
function insertionSort(arr){
    for(let i=0;i<arr.length-1;i++){
        if(arr[i]>arr[i+1]) [arr[i],arr[i+1]] = [arr[i+1],arr[i]]
        for(let j=i;j>0;j--){
            if(arr[j-1]>arr[j]) [arr[j-1],arr[j]] = [arr[j],arr[j-1]]
        }
    }
    return arr
}
// console.log(insertionSort(arr));

4.
function mergeSort(arr,low,high){
    if(low>=high) return  
    let mid = Math.floor((low+high)/2)
    mergeSort(arr,low,mid)
    mergeSort(arr,mid+1,high)
    merge(arr,low,mid,high)
}
function merge(arr,low,mid,high){
    let result=[]
    let left=low,right=mid+1
    while(left<=mid && right<=high){
        if(arr[left]<arr[right]){
            result.push(arr[left])
            left ++
        }
        else{
            result.push(arr[right])
            right++
        }
    }
    while(left<=mid){
        result.push(arr[left])
        left++
    }
    while(right<=high){
        result.push(arr[right])
        right++
    }
    for(let i=low;i<=high;i++){
        arr[i]=result[i-low]
    }
    result=[]
}
mergeSort(arr,0,arr.length-1)
console.log(arr)

5.
function recursiveBubbleSort(arr,n){
    for(let i=0;i<n-1;i++){
        if(arr[i]>arr[i+1]) [arr[i],arr[i+1]] = [arr[i+1],arr[i]]
    }
    recursiveBubbleSort(arr,n-1)
}
recursiveBubbleSort(arr,arr.length)
console.log(arr)

6.
