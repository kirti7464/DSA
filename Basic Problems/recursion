1.
Input:
N = 10
Output: 1 2 3 4 5 6 7 8 9 10

    let i=1,result="";
        func()
        function func(){
            result+=i+" ";
            // console.log(i)
            if(i==N) return ;
            i++
            func()
        }
        console.log(result) 

2.
find sum of: 1^3 + 2^3 + 3^3 + 4^3 + â€¦ till n-th term.

        return (n*(n+1)/2)*(n*(n+1)/2);

3.
Input:
N = 10
Output: 1 2 3 4 5 6 7 8 9 10

    let i=1,result="";
        func()
        function func(){
            result+=i+" ";
            if(i==N) return ;
            i++
            func()
        }
        console.log(result) 

4.
Input:
N = 10
Output: 10 9 8 7 6 5 4 3 2 1

    let i=N,result="";
        func()
        function func(){
             if(i<1) return ;
            result+=i+" ";
            i--
            func()
        }
        console.log(result) 

5. Palindrome
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

    let x= s.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')
    let i=0,j=x.length-1;
    while(i<j){
        if(x[i]!=x[j]) return false
        i++;
        j--;
        
    }
    return true

or

var isPalin= function(s) {
    if(s.length==0 ) {return true}
    if(s[0]==s[s.length-1]) {
        if(s.length==1) {return true}
      if(s.length!=1) {return isPalin(s.slice(1,s.length-1));}
    }
    else{ return false}
    
};
var isPalindrome = function(s) {
    let x= s.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')
    let res=isPalin(x)
    return res
};

6. factorial
Input: N = 3
Output: 1 2
Explanation: The first factorial number is 
1 which is less than equal to N. The second 
number is 2 which is less than equal to N,
but the third factorial number is 6 which 
is greater than N. So we print only 1 and 2.

    var factorial= function(x){
        if(x==1 || x==0) return 1;
        else 
        {
            let res= x*factorial(x-1);
            return res
        }
    }
        or

     let i=1
        let res =1,result=[]
        var factorial= function(a){
        if(a==1 ||a==0) return 1;
        else return factorial(a-1)*a;
        }
       
        while(res<=N){
            
            result.push(res)
            i++
            res = factorial(i);
        }
        return result
