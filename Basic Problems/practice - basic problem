** Maths Problems ** -
1.
let N=4,N2=5
function countDigits(N){
    let c=0,n=N;
    while(n!=0){
        let divisor = n%10;
        if(N%divisor == 0) c++;
        n=Math.floor(n/10)
    }
    return c
}
// console.log(countDigits(N));

2.
function reverseNum(N){
    let res=0,n=N;
    while(n!=0){
        rem=n%10;
        res = res*10+rem;
        n=Math.floor(n/10)
    }
    return res
}
// console.log(reverseNum(N));

3.
function checkPalindrome(N){
    let res=0,n=N;
    while(n!=0){
        rem=n%10;
        res = res*10+rem;
        n=Math.floor(n/10)
    }
    return res==N
}
// console.log(checkPalindrome(N,N2));

4.
function lcmGcd(a,b){
    let gcd=0
    while(a>0 && b>0){
        if(a>b) a=a%b
        else if (b>a) b=b%a
    }
    if(a==0) { gcd = b;}
    else if(b==0) {gcd = a;}
    lcm = (a*b)/gcd
    return [lcm,gcd]
}
// console.log(lcmGcd(N,N2));

5.
function armstrong(N){
    let res=0,n=N
    while(n!=0){
        let elem = n%10;
        res = res + elem**3
        n= Math.floor(n/10)
    }
    return res==N
}
// console.log(armstrong(N));

6.
function sumOfDivisors(n){
    let res=0,i=1
    while(i<=n){
        res+=Math.floor(n/i)*i
        i++
    }
    return res
}
console.log(sumOfDivisors(N));

** Recursion Problems ** - 
1.
function printNumber(n,i){
    if(n==i) return -1
    console.log(i)
    printNumber(n,++i)
}
// console.log(printNumber(N,1));

2.
function print1toNTimes(n,i){
    console.log("ABC")
    if(n==i) return -1
    print1toNTimes(n,++i)
}
// console.log(print1toNTimes(N,1));

3.
function printNto1Times(n){
    if(n<=0) return -1
    console.log(n)
    printNto1Times(--n)
}
// console.log(printNto1Times(N))

4.
function sumofN(n,res){
    if(n==0) return res
    res = res + n
    return sumofN(--n,res)
}
// console.log(sumofN(N,0))

5.
function factorial(n){
    if(n==0 ||n==1) return 1
    else return factorial(n-1)*n
}
let res=[],i=1
function factorialArryUptoN(n){
    while(res<=n){
        res.push(factorial(i))
        i++
    }
    return res
}
// console.log(factorialArryUptoN(5))

6.
let s= "aabbaa"
function palindrome(s){
   if(s?.length==0 || s?.length==1) return "true"
   if(s[0]!=s[s.length-1]) return "false"
   return palindrome(s.slice(1,s.length-1))
}
// console.log(palindrome(s))
function fibonnaci(n){
    if(n==1 || n==2) return 1
    else return fibonnaci(n-1)+ fibonnaci(n-2)
}
console.log(fibonnaci(N))
