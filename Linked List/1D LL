1. Linked List Insertion [https://www.geeksforgeeks.org/problems/linked-list-insertion-1587115620/]

Create a link list of size N according to the given input literals.
Each integer input is accompanied by an indicator which can either be 0 or 1. If it is 0, insert the integer in the
beginning of the link list. If it is 1, insert the integer at the end of the link list. 
Hint: When inserting at the end, make sure that you handle NULL explicitly.
Input:
LinkedList: 5->1->6->1->9->1
Output: 5 6 9

  //Function to insert a node at the beginning of the linked list.
  insertAtBegining(head, newData)
    {
        let newNode = new Node(newData)
        newNode.next = head
        return newNode
    }
    //Function to insert a node at the end of the linked list.
    insertAtEnd(head, newData)
    {
        let newNode = new Node(newData)
        if(!head) return newNode
        let current = head
        while(current.next){
            current=current.next
        }
        current.next = newNode
        return head
    }

2. Linked List Deletion [https://leetcode.com/problems/delete-node-in-a-linked-list/description/]
Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.

Hint:In reality, only a node is given that needs to be deleted, so basically we are changing its val
to next node's val & it's pointer to next node's pointer.
[Since the node is guarentee not to be the tail]

  var deleteNode = function(node) {
    node.val= node.next.val;
    node.next= node.next.next;
  };

3. Count Linked List Nodes [https://www.geeksforgeeks.org/problems/count-nodes-of-linked-list/0]
Input:
LinkedList: 1->2->3->4->5
Output: 5
Explanation: Count of nodes in the 
linked list is 5, which is its length.

  getCount(head)
    {
        let count=0;
        let start=head;
        while(start.next){
            count++;
            start=start.next;
        }
        if(!start.next){
          count++;
        }
        return count
    }

4. Search in Linked List [https://www.geeksforgeeks.org/problems/search-in-linked-list-1664434326/]
Input:
n = 4
1->2->3->4
Key = 3
Output:
1
Explanation:
3 is present in Linked List, so the function returns 1 else 0.

  searchKey(n, head, key) {
        // Code here
        let i=0
        while(i<n){
            if(head.data == key) return 1
            head = head.next
            i++
        }
        return 0
    }
